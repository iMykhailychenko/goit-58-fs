{"version":3,"file":"static/js/951.422f12ee.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/NotFound/NotFound.jsx","../node_modules/date-fns/esm/formatDistanceToNow/index.js","components/Posts/PostsItem.jsx","helpers/cut-string.js","webpack://goit-58-fs/./src/components/Skeleton/Skeleton.module.css?e666","components/Skeleton/Skeleton.jsx","components/Posts/PostsLoader.jsx","pages/PostsListPage/PostsListPage.jsx"],"sourcesContent":["import classNames from 'classnames';\n\nexport const Button = ({ type = 'button', className = 'btn-primary', isLoading, children, disabled, ...props }) => {\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button type={type} className={classNames('btn', className)} {...props} disabled={isLoading || disabled}>\n      {isLoading ? (\n        <>\n          <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\" />\n          <span className=\"ms-2\">Loading...</span>\n        </>\n      ) : (\n        children\n      )}\n    </button>\n  );\n};\n","import image from './713761_big_8857bc5285.jpeg';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Произошол отрицательний поиск. Потерь нет!</p>\n    </div>\n  );\n};\n","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import axios from 'axios';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { cutString } from '../../helpers/cut-string';\n\nexport const PostsItem = ({ post }) => {\n  const location = useLocation();\n\n  const deletePost = () => {\n    axios\n      .delete('https://goit-fs.netlify.app/api/posts/' + post.id)\n      .then(() => {\n        toast.success('Deleted');\n      });\n  };\n\n  return (\n    <div className=\"col-12 col-md-6 col-xxl-4 mb-4\">\n      <div className=\"card\">\n        <img\n          height=\"250px\"\n          alt={post.title}\n          src={post.preview_image}\n          className=\"card-img-top\"\n          style={{ objectFit: 'cover' }}\n        />\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n\n          <p className=\"card-text\">{cutString(post.content, 60)}</p>\n\n          <ul className=\"list-group list-group-flush mb-4\">\n            <li className=\"list-group-item\">Views: {post.views}</li>\n            <li className=\"list-group-item\">\n              Created: {formatDistanceToNow(new Date(post.created_at))}\n            </li>\n          </ul>\n\n          <div className=\"d-flex\">\n            <button\n              type=\"button\"\n              onClick={deletePost}\n              className=\"btn btn-danger\"\n            >\n              Delete post\n            </button>\n\n            <Link\n              to={`${post.id}`}\n              className=\"btn btn-primary ms-3\"\n              state={{ from: location }}\n            >\n              Read post\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const cutString = (string, maxLength) => {\n  return string.length > maxLength ? string.slice(0, maxLength) + '...' : string;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"Skeleton_skeleton__xUXxh\"};","import classNames from 'classnames';\n\nimport styles from './Skeleton.module.css';\n\nexport const Skeleton = ({ className, ...props }) => {\n  return <div className={classNames(styles.skeleton, className)} {...props} />;\n};\n","import { Skeleton } from '../Skeleton/Skeleton';\n\nexport const PostsLoader = ({ amount = 9 }) => {\n  return (\n    <div className=\"container-fluid g-0 pb-5 mb-5\">\n      <div className=\"row\">\n        {[...Array(amount)].map((_, index) => (\n          <div key={index} className=\"col-12 col-md-6 col-xxl-4 mb-4\">\n            <div className=\"card\">\n              <Skeleton style={{ height: '250px' }} />\n\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-4\">\n                  <Skeleton style={{ height: '12px' }} />\n                </h5>\n\n                <div className=\"card-text\">\n                  <Skeleton className=\"my-2\" />\n                  <Skeleton className=\"w-50\" />\n                </div>\n\n                <div className=\"d-flex mt-3\">\n                  <div className=\"btn disabled btn-danger\">Delete post</div>\n                  <div className=\"btn btn-primary disabled ms-3\">Read post</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from '../../components/Button/Button';\nimport { NotFound } from '../../components/NotFound/NotFound';\nimport { PostsItem } from '../../components/Posts/PostsItem';\nimport { PostsLoader } from '../../components/Posts/PostsLoader';\nimport { STATUS } from '../../constants/status.constants';\nimport { postsAsyncThunk } from '../../redux/posts/posts.thunk';\n\nconst PostsListPage = () => {\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.posts.status);\n  const posts = useSelector(state => state.posts.posts);\n\n  useEffect(() => {\n    dispatch(postsAsyncThunk());\n  }, [dispatch]);\n\n  const [search, setSearch] = useState('');\n  const handleChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSearch = () => {\n    dispatch(postsAsyncThunk(search));\n  };\n\n  // console.log(posts && posts.data);\n  // console.log(posts?.data);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"form-control mb-4\"\n        placeholder=\"Type to search...\"\n        value={search}\n        onChange={handleChange}\n      />\n\n      <Button onClick={handleSearch} className=\"btn-primary mb-4\">\n        Start search\n      </Button>\n\n      {/* TODO Show loader */}\n      {(status === STATUS.idle || status === STATUS.loading) && <PostsLoader />}\n\n      {/* TODO Not found */}\n      {status === STATUS.error && <NotFound />}\n\n      <div className=\"container-fluid g-0 pb-5 mb-5\">\n        <div className=\"row\">\n          {posts?.data.map(post => (\n            <PostsItem key={post.id} post={post} />\n          ))}\n        </div>\n      </div>\n\n      {/* TODO Pagination */}\n      {posts && (\n        <div className=\"pagination\">\n          <div className=\"btn-group my-2 mx-auto btn-group-lg\">\n            {[...Array(posts.total_pages)].map((_, index) => {\n              const innerPage = index + 1;\n\n              return (\n                <button key={index} type=\"button\" className=\"btn btn-primary\">\n                  {innerPage}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PostsListPage;\n"],"names":["Button","type","className","isLoading","children","disabled","props","classNames","role","NotFound","src","image","alt","style","width","formatDistanceToNow","dirtyDate","options","requiredArgs","arguments","distanceInWords","Date","now","PostsItem","string","maxLength","post","location","useLocation","height","title","preview_image","objectFit","content","length","slice","views","created_at","onClick","axios","id","then","toast","to","state","from","Skeleton","styles","PostsLoader","amount","Array","map","_","index","dispatch","useDispatch","status","useSelector","posts","useEffect","postsAsyncThunk","useState","search","setSearch","placeholder","value","onChange","event","target","STATUS","data","total_pages","innerPage"],"sourceRoot":""}