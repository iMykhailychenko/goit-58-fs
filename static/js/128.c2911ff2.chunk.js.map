{"version":3,"file":"static/js/128.c2911ff2.chunk.js","mappings":"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","sources":["pages/SinglePostPage/CommentsPage/CommentForm/CommentForm.jsx","pages/SinglePostPage/CommentsPage/CommentList/CommentList.jsx","pages/SinglePostPage/CommentsPage/CommentsPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\n\nimport { BASE_URL } from '../../../../constants/api.constants';\n\nexport const CommentForm = ({ setComments }) => {\n  // TODO change to dynamic value\n  const postId = 10;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState('');\n\n  const handleChange = event => setContent(event.target.value);\n  const handleReset = () => setContent('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!content.trim()) {\n      toast.error('Fill all required fields!');\n      return;\n    }\n\n    setIsLoading(true);\n    axios\n      .post(`${BASE_URL}/posts/${postId}/comments`, {\n        content,\n      })\n      .then(data => {\n        toast.success('You have successfully created a new comment!');\n        setComments(prev => ({ ...prev, data: [data, ...prev.data] }));\n        handleReset();\n      })\n      .catch(() => {\n        toast.error('Something went wrong!');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <form action=\"#\" className=\"my-5\" onSubmit={handleSubmit}>\n      <label className=\"d-block form-label\">\n        <p>Post content</p>\n        <textarea\n          rows=\"5\"\n          value={content}\n          onChange={handleChange}\n          className=\"form-control\"\n          placeholder=\"Write your feedback\"\n        />\n      </label>\n\n      <button\n        type=\"submit\"\n        className={classNames(\n          'btn btn-primary my-2',\n          isLoading ? 'disabled' : '',\n        )}\n      >\n        {isLoading && <span className=\"spinner-grow spinner-grow-sm mr-2\" />}\n        Submit\n      </button>\n    </form>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\n\nimport axios from 'axios';\nimport { formatDistance } from 'date-fns';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { BASE_URL } from '../../../../constants/api.constants';\n\nexport const CommentList = ({ comments, setComments }) => {\n  // TODO change to dynamic value\n  const { postId } = useParams();\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchComments = useCallback(() => {\n    return axios\n      .get(`${BASE_URL}/posts/${postId}/comments`)\n      .then(setComments)\n      .catch(() => {\n        toast.error('Something went wrong!');\n      });\n  }, [postId, setComments]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchComments().finally(() => setIsLoading(false));\n  }, [fetchComments]);\n\n  const handleDeleteComment = commentId => {\n    axios\n      .delete(`http://70.34.201.18:8000/comments/${commentId}`)\n      .then(() => {\n        setComments(prev => ({\n          ...prev,\n          data: prev.data.filter(item => item.id !== commentId),\n        }));\n        toast.success('You have successfully deleted your comment!');\n      })\n      .catch(() => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"spinner-border text-primary\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (!comments?.data?.length) {\n    return <p>No comments yet!</p>;\n  }\n\n  return (\n    <>\n      <ul className=\"list-group\">\n        {comments.data.map(comment => (\n          <li\n            key={comment.id}\n            className=\"list-group-item list-group-item-action py-4\"\n          >\n            <div className=\"d-flex w-100 justify-content-between\">\n              <small>\n                {formatDistance(new Date(comment.created_at), new Date(), {\n                  addSuffix: true,\n                })}\n              </small>\n            </div>\n\n            <div\n              className=\"mb-4 mt-3\"\n              dangerouslySetInnerHTML={{\n                __html: comment.content.replace(/\\n/g, '<br/>'),\n              }}\n            />\n\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-danger\"\n                onClick={() => handleDeleteComment(comment.id)}\n              >\n                Delete comment\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-primary\">\n                Edit comment\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { CommentForm } from './CommentForm/CommentForm';\nimport { CommentList } from './CommentList/CommentList';\n\nconst CommentsPage = () => {\n  const [comments, setComments] = useState(null);\n\n  return (\n    <>\n      <CommentForm setComments={setComments} />\n      <CommentList comments={comments} setComments={setComments} />\n    </>\n  );\n};\n\nexport default CommentsPage;\n"],"names":["CommentForm","setComments","useState","isLoading","setIsLoading","content","setContent","action","className","onSubmit","event","preventDefault","trim","axios","BASE_URL","then","data","toast","prev","catch","finally","rows","value","onChange","target","placeholder","type","classNames","CommentList","comments","postId","useParams","fetchComments","useCallback","useEffect","length","map","comment","formatDistance","Date","created_at","addSuffix","dangerouslySetInnerHTML","__html","replace","onClick","commentId","id","filter","item"],"sourceRoot":""}